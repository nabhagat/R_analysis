source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
block_likert
View(cl_trial_stats)
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
sum(Total_num_of_trials)
sum(Successful_EEG_EMG_trials)
sum(Successful_trials)
120/125
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
install.packages("xlsx")
library("xlsx", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("xlsxjars", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("rJava", lib.loc="C:/Program Files/R/R-3.1.1/library")
install.packages("rJava")
library("rJava", lib.loc="C:/Program Files/R/R-3.1.1/library")
detach("package:rJava", unload=TRUE)
file_extensions <- c(".eeg",".txt",".avi")
file_extensions
file_extensions[1]
file_extensions[2]
valid_file_extensions <- c(".eeg",".vhdr",".vmrk",            # BrainVision Recorder
".mat",                            # MATLAB
".set",".fdt",                     # EEGLAB Toolbox
".txt",                            # Kinematics - MAHI Exo, EEG electrode impedance
".avi",                            # Video files
".elp"                             # Electrode location file - CAPTRACK digitizer
)
valid_file_extensions
directory <- "C:/NRI_BMI_Mahi_Project_files/All_Subjects/"
Subject_name <- "S9007"            #1
all_sessions_directory <- paste(c(directory,"Subject_",Subject_name,"/",Subject_name,"_Session"),collapse = '')
all_sessions_directory
dir(all_sessions_directory)
all_sessions_directory <- paste(c(directory,"Subject_",Subject_name,"/"),collapse = '')
dir(all_sessions_directory)
c(directory,"Subject_",Subject_name,"/"),collapse = '')
paste(c(directory,"Subject_",Subject_name,"/"),collapse = '')
paste(c(Subject_name,"_Session"),collapse = '')
kin_filename <- dir(path = paste(c(directory,"Subject_",Subject_name,"/"),collapse = ''),pattern = paste(c(Subject_name,"_Session"),collapse = ''))
dir(path = paste(c(directory,"Subject_",Subject_name,"/"),collapse = ''),pattern = paste(c(Subject_name,"_Session"),collapse = ''))
kin_filename
kin_filename[1]
list.dirs(path = paste(c(directory,"Subject_",Subject_name,"/"),collapse = ''),pattern = paste(c(Subject_name,"_Session"),collapse = ''))
list.dirs(path = paste(c(directory,"Subject_",Subject_name,"/"),collapse = ''))
dir(path = paste(c(directory,"Subject_",Subject_name,"/"),collapse = ''),pattern = paste(c(Subject_name,"_Session"),collapse = ''))
years<-c("20 years old", "1 years old")
as.numeric(gsub(" years old", "", years))
help as.numeric()
help(as.numeric)
help(gsub)
dir(path = paste(c(directory,"Subject_",Subject_name,"/"),collapse = ''),pattern = paste(c(Subject_name,"_Session"),collapse = ''))
filedir <- dir(path = paste(c(directory,"Subject_",Subject_name,"/"),collapse = ''),pattern = paste(c(Subject_name,"_Session"),collapse = ''))
gsub(paste(c(Subject_name,"_Session"),collapse = '')
)
gsub(paste(c(Subject_name,"_Session"),collapse = '')
paste(c(Subject_name,"_Session"),collapse = '')
gsub(paste(c(Subject_name,"_Session"),collapse = ''),filedir)
gsub(paste(c(Subject_name,"_Session"),collapse = ''),filedir[1])
gsub(paste(c(Subject_name,"_Session"),collapse = ''),filedir[1]))
gsub(paste(c(Subject_name,"_Session"),collapse = ''),"S9007_Session1")
gsub(pattern = paste(c(Subject_name,"_Session"),collapse = ''),x = filedir)
gsub(pattern = paste(c(Subject_name,"_Session"),collapse = ''),"",x = filedir)
as.numeric(gsub(pattern = paste(c(Subject_name,"_Session"),collapse = ''),"",x = filedir))
sort(as.numeric(gsub(pattern = paste(c(Subject_name,"_Session"),collapse = ''),"",x = filedir)))
dir(path = paste(c(directory,"Subject_",Subject_name,"/"),collapse = ''),pattern = paste(c(Subject_name,"_Session"),collapse = ''))
all_sessions_directory <- dir(path = paste(c(directory,"Subject_",Subject_name,"/"),collapse = ''),pattern = paste(c(Subject_name,"_Session"),collapse = ''))
all_sessions_directory_names <- dir(path = paste(c(directory,"Subject_",Subject_name,"/"),collapse = ''),pattern = paste(c(Subject_name,"_Session"),collapse = ''))
sort(as.numeric(gsub(pattern = paste(c(Subject_name,"_Session"),collapse = ''),"",x = all_sessions_directory_names)))
Session_nos <- sort(as.numeric(gsub(pattern = paste(c(Subject_name,"_Session"),collapse = ''),"",x = all_sessions_directory_names)))
all_sessions_directory_names
help dir
c(directory,"Subject_",Subject_name,"/",)
ses_num <- 4
c(directory,"Subject_",Subject_name,"/",all_sessions_directory_names[ses_num]),collapse = '')
all_sessions_directory_names[ses_num]
[Session_nos[ses_num]]
all_sessions_directory_names[Session_nos[ses_num]]
Session_nos[ses_num]
c(directory,"Subject_",Subject_name,"/",Subject_name,"_Session",[Session_nos[ses_num]])
c(directory,"Subject_",Subject_name,"/",Subject_name,"_Session",Session_nos[ses_num])
paste(c(directory,"Subject_",Subject_name,"/",Subject_name,"_Session",Session_nos[ses_num]),collapse = '')
list.files(path = paste(c(directory,"Subject_",Subject_name,"/",Subject_name,"_Session",Session_nos[ses_num]),collapse = ''))
list.files(path = paste(c(directory,"Subject_",Subject_name,"/",Subject_name,"_Session",Session_nos[ses_num]),collapse = ''),pattern = ".txt")
list.files(path = paste(c(directory,"Subject_",Subject_name,"/",Subject_name,"_Session",Session_nos[ses_num]),collapse = ''),pattern = ".txt",recursive = true)
list.files(path = paste(c(directory,"Subject_",Subject_name,"/",Subject_name,"_Session",Session_nos[ses_num]),collapse = ''),pattern = ".txt",recursive = TRUE)
ses_num <- 1
list.files(path = paste(c(directory,"Subject_",Subject_name,"/",Subject_name,"_Session",Session_nos[ses_num]),collapse = ''),pattern = ".txt",recursive = FALSE)
ses_num <- 2
list.files(path = paste(c(directory,"Subject_",Subject_name,"/",Subject_name,"_Session",Session_nos[ses_num]),collapse = ''),pattern = ".txt",recursive = FALSE)
library("rJava", lib.loc="C:/Program Files/R/R-3.1.1/library")
install.packages("rJava")
library("rJava", lib.loc="C:/Program Files/R/R-3.1.1/library")
install.packages("installr")
version
library("installr", lib.loc="C:/Program Files/R/R-3.1.1/library")
updateR(F, T, F, F, F, F, T)
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
Classifier$channels
bc
closedloop_Block_num
kin_filename
kin_fileid
folderid
paste(c(kin_fileid,"_kinematics")
,collapse = '')
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
kin_header <- scan(paste(c(directory,folderid,fileid,"_closeloop_kinematics.txt"),collapse = ''),what ="character",skip = 11,nlines = 1) # Nikunj - 07/01/16
block_likert <- type.convert(kin_header[!is.na(type.convert(kin_header,na.strings = c("Survey","Responses:")))])
block_likert
if(use_simulated_closeloop_results == 1){
cl_BMI_data <- readMat(paste(c(directory,sim_results_folderid,sim_results_fileid,"_closeloop_results.mat"),collapse = ''),fixNames = FALSE)
}else{
# cl_BMI_data <- readMat(paste(c(directory,folderid,fileid,"_closeloop_results.mat"),collapse = ''),fixNames = FALSE)
# Read files that have time-stamps in filenames
closeloop_mat_filename <- dir(path = paste(c(directory,folderid),collapse = ''),pattern = paste(c(fileid,"_closeloop_results"),collapse = ''))
if (length(closeloop_mat_filename)==0){
BMI_mat_file_exists <- 0
}
else{
BMI_mat_file_exists <- 1
cl_BMI_data <- readMat(paste(c(directory,folderid,closeloop_mat_filename),collapse = ''),fixNames = FALSE)
}
}
size(cl_BMI_data$processed_emg)
help(resample)
size(cl_BMI_data$processed_eeg)
size(cl_BMI_data$move_counts)
size(cl_BMI_data$processed_emg[1,])
size(cl_BMI_data$processed_emg[1,]'')
size(cl_BMI_data$processed_emg[,1])
size(cl_BMI_data$processed_emg[1,])
plot.ts(y = cl_BMI_data$processed_emg[1,])
plot(cl_BMI_data$processed_emg[1,])
plot(cl_BMI_data$processed_emg[1,],type = l)
plot(cl_BMI_data$processed_emg[1,],type = 'l')
test <- resample(cl_BMI_data$processed_emg[1,],6,1)
size(test)
size(cl_BMI_data$processed_eeg)
test <- resample(cl_BMI_data$processed_emg[1,],20,3.33)
size(test)
test <- resample(cl_BMI_data$processed_emg[1,],20,3.3)
size(test)
test <- resample(cl_BMI_data$processed_emg[1,],20,3.33)
size(test)
test <- resample(cl_BMI_data$processed_emg[1,],20,3.333)
size(test)
bmi_data_trial_interval
size(resample(cl_BMI_data$processed_emg[1,],500,3.333))
size(cl_kinematics_data$Time.s.)
adj_marker_block_time_stamps
adj_start_of_trial
adj_end_of_trial
all_stimulus_indices
size(resample(cl_BMI_data$processed_emg,500,3.333))
size(resample(cl_BMI_data$processed_emg',500,3.333))
)
a = [1 2 3 4]
a = c(1:4)
a
a''
Biceps_EMG_rms_resampled <- resample(cl_BMI_data$processed_emg[1,],1000,3.333)
Triceps_EMG_rms_resampled <- resample(cl_BMI_data$processed_emg[2,],1000,3.333)
colnames(cl_kinematics_data)[c(1,17,18,19)] <- c("time","Target_shown","Target_reached","Move_onset")
colnames(cl_kinematics_data)[c(22,21)] <- c("Catch","Timeout") # Timeout is 21 and catch is 22 on 9/13/2015. Previously these were swapped
colnames(cl_kinematics_data)[c(2,7,12)] <- c("Elbow_position","Elbow_velocity","Elbow_torque")
cl_kinematics_data$Target_shown <- ExtractUniqueTriggers(cl_kinematics_data$Target_shown)
cl_kinematics_data$Target_reached <- ExtractUniqueTriggers(cl_kinematics_data$Target_reached)
cl_kinematics_data$Move_onset <- ExtractUniqueTriggers(cl_kinematics_data$Move_onset)
cl_kinematics_data$Catch <- ExtractUniqueTriggers(cl_kinematics_data$Catch)
cl_kinematics_data$Timeout <- ExtractUniqueTriggers(cl_kinematics_data$Timeout)
# Correct for start and end of block triggers - set them to zero in Target_shown, Target_reached
temp_intersect <- intersect(which(cl_kinematics_data$Target_shown == 1), which(cl_kinematics_data$Target_reached == 1))
if(length(temp_intersect) < 2){
if (which(which(cl_kinematics_data$Target_shown == 1) == temp_intersect) == 1){
cl_kinematics_data <- cl_kinematics_data[-c(1:temp_intersect[1]),] # Added 9-13-2015
}else if((which(which(cl_kinematics_data$Target_shown == 1) == temp_intersect) > 1)){
cl_kinematics_data <- cl_kinematics_data[-c(temp_intersect[1]:nrow(cl_kinematics_data)),]
}else{
#do nothing
}
}else{
cl_kinematics_data <- cl_kinematics_data[-c(1:temp_intersect[1]),] # Added Dec 8,2014
temp_intersect <- intersect(which(cl_kinematics_data$Target_shown == 1), which(cl_kinematics_data$Target_reached == 1))
cl_kinematics_data <- cl_kinematics_data[-c(temp_intersect[1]:nrow(cl_kinematics_data)),]
}
size(cl_kinematics_data)
temp_intersect
size(cl_kinematics_data[1,])
nrows(cl_kinematics_data)
nrow(cl_kinematics_data)
nrow(Biceps_EMG_rms_resampled)
size(Biceps_EMG_rms_resampled)
target_shown_instants <- which(cl_kinematics_data$Target_shown == 1)
target_reached_instances <- which(cl_kinematics_data$Target_reached == 1)
new_Target_reached <- numeric(length(cl_kinematics_data$Target_reached))
for (j in seq_along(target_shown_instants)){
val_instant <- which((target_reached_instances - target_shown_instants[j]) >= 0)
if(!isempty(val_instant)){
nearest_target_reached_instance <- target_reached_instances[val_instant[1]]
if(1 %in% cl_kinematics_data$Timeout[target_shown_instants[j]:nearest_target_reached_instance] == 1){
# do nothing
}
else{
# use this as target_reached trigger
new_Target_reached[nearest_target_reached_instance] <- 1
}
}
}
cl_kinematics_data$Target_reached <- new_Target_reached
# Filter the velocity and compute magnitude
#filt_vel <- abs(sgolayfilt(cl_kinematics_data$Elbow_velocity,p = 1,n = 201))  # No filtering to avoid any time delays
filt_vel <- abs(cl_kinematics_data$Elbow_velocity)
vel_triggers <- numeric(length(filt_vel))
vel_triggers[filt_vel >= velocity_threshold] <- 5   # Digitize 0 or 5 as trigger levels
vel_triggers_initial <- ExtractUniqueTriggers(vel_triggers,polarity = 1)
trig_indices <- which(vel_triggers_initial == 1)
diff_trig_indices <- diff(trig_indices)
trig_indices[c(FALSE, (diff_trig_indices < 1000))] <- 0
vel_trigger_mod <- numeric(length(vel_triggers_initial))
vel_trigger_mod[trig_indices] <- 1
mycolors <- c("green","magenta","blue","black","green","red","yellow","black")
#plot.ts(cl_kinematics_data[,c("Catch","Target_shown","Target_reached","Move_onset","Timeout")],plot.type = "single",col = mycolors, xy.labels = "")
data_to_plot <- data.frame(filt_vel,cl_kinematics_data[,c("Target_shown","Target_reached","Move_onset","Timeout","Catch")])
plot.ts(data_to_plot,plot.type = "single",col = mycolors, xy.labels = "",ylim = c(0,0.5))
Target_hit <- cl_kinematics_data$Target_reached + cl_kinematics_data$Timeout
# Instead Combine Move_onset + Timeout Added Dec 8,2014
end_trial <- cl_kinematics_data$Move_onset + cl_kinematics_data$Timeout
all_response_indices <- which(end_trial==1)
all_target_hits <- which(Target_hit==1)
catch_indices <- which(cl_kinematics_data$Catch == 1)
all_stimulus_indices <- which(cl_kinematics_data$Target_shown == 1)
nearest_stimulus_indices <- find_next_stimulus_index(all_stimulus_indices,catch_indices)
nearest_response_indices <- find_next_response_index(all_response_indices,catch_indices)
cl_session_stats <- data.frame(
Session_number = numeric(),
Block_number = numeric(),
Start_of_trial = numeric(),
End_of_trial = numeric(),
Valid_or_catch = numeric(),
Intent_detected = numeric(),
Time_to_trigger = numeric(),
Number_of_attempts = numeric(),
EEG_decisions = numeric(),
EEG_EMG_decisions = numeric(),
MRCP_slope = numeric(),
MRCP_neg_peak = numeric(),
MRCP_AUC = numeric(),
MRCP_mahalanobis = numeric(),
feature_index = numeric(),
Corrected_spatial_chan_avg_index = numeric(),
Correction_applied_in_samples = numeric(),
Likert_score = numeric(),
Target = numeric(),
Kinematic_onset_sample_num = numeric(),
Target_is_hit = numeric(),
EEG_Kinematic_latency_ms = numeric(),
EMG_decisions = numeric()
)
length(all_stimulus_indices)
cl_trial_stats <- data.frame(
Session_nos = rep_len(closeloop_Sess_num,length(all_stimulus_indices)),
Block_number = rep_len(closedloop_Block_num[bc],length(all_stimulus_indices)),
Start_of_trial = all_stimulus_indices,
End_of_trial = all_response_indices,
Valid_or_catch = rep_len(1,length(all_stimulus_indices)),
Intent_detected = numeric(length(all_stimulus_indices)),
Time_to_trigger = numeric(length(all_stimulus_indices)),
Number_of_attempts = numeric(length(all_stimulus_indices)),
EEG_decisions = numeric(length(all_stimulus_indices)),
EEG_EMG_decisions = numeric(length(all_stimulus_indices)),
MRCP_slope = numeric(length(all_stimulus_indices)),
MRCP_neg_peak = numeric(length(all_stimulus_indices)),
MRCP_AUC = numeric(length(all_stimulus_indices)),
MRCP_mahalanobis = numeric(length(all_stimulus_indices)),
feature_index = numeric(length(all_stimulus_indices)),
Corrected_spatial_chan_avg_index = numeric(length(all_stimulus_indices)),
Correction_applied_in_samples = numeric(length(all_stimulus_indices)),
Likert_score = block_likert,
Target = cl_kinematics_data$Target[all_stimulus_indices],
Kinematic_onset_sample_num = numeric(length(all_stimulus_indices)),
Target_is_hit = all_target_hits,
EEG_Kinematic_latency_ms = numeric(length(all_stimulus_indices)),
EMG_decisions = numeric(length(all_stimulus_indices))
)
closeloop_Sess_num
rep_len(closeloop_Sess_num,length(all_stimulus_indices))
rep_len(closedloop_Block_num[bc],length(all_stimulus_indices))
all_stimulus_indices
all_response_indices
if (Subject_name == "JF"){
# DO NOT Combine Target_reached/Move_onset + Timeout
end_trial <- cl_kinematics_data$Target_reached
#end_trial <- cl_kinematics_data$Move_onset      # Added Dec 8,2014
all_response_indices <- which(end_trial==1)
catch_indices <- which(cl_kinematics_data$Catch == 1)
all_stimulus_indices <- which(cl_kinematics_data$Target_shown == 1)
nearest_stimulus_indices <- catch_indices    # Since Catch and Target shown triggers overlap
nearest_response_indices <- find_next_response_index(all_response_indices,catch_indices)
}
else{
# Combine Target_reached + Timeout
Target_hit <- cl_kinematics_data$Target_reached + cl_kinematics_data$Timeout
# Instead Combine Move_onset + Timeout Added Dec 8,2014
end_trial <- cl_kinematics_data$Move_onset + cl_kinematics_data$Timeout
all_response_indices <- which(end_trial==1)
all_target_hits <- which(Target_hit==1)
catch_indices <- which(cl_kinematics_data$Catch == 1)
all_stimulus_indices <- which(cl_kinematics_data$Target_shown == 1)
nearest_stimulus_indices <- find_next_stimulus_index(all_stimulus_indices,catch_indices)
nearest_response_indices <- find_next_response_index(all_response_indices,catch_indices)
}
cl_BMI_data$marker_block[,1]
cl_BMI_data$marker_block[min(which(cl_BMI_data$marker_block[,2]==50)),1]
Biceps_EMG_rms_resampled <- resample(cl_BMI_data$processed_emg[1,],500,3.333)
Triceps_EMG_rms_resampled <- resample(cl_BMI_data$processed_emg[2,],500,3.333)
size(Biceps_EMG_rms_resampled)
cl_BMI_data$marker_block[,2]
}
which(cl_BMI_data$marker_block[,2]==50)
cl_BMI_data$marker_block[which(cl_BMI_data$marker_block[,2]==50),1]
204751 - 9406
nrow(cl_kinematics_data$time)
size(cl_kinematics_data$time)
size(cl_kinematics_data$time)/2
195295-195345
50/500
EMG_data_interval <- cl_BMI_data$marker_block[which(cl_BMI_data$marker_block[,2]==50),1]
Biceps_EMG_rms_resampled(1)
Biceps_EMG_rms_resampled[1]
size(Biceps_EMG_rms_resampled)
size(Biceps_EMG_rms_resampled[-c(1:EMG_data_interval[1])])
EMG_data_interval
207620-9406
size(Biceps_EMG_rms_resampled[EMG_data_interval[1]:EMG_data_interval[2]])
Biceps_EMG_rms_resampled <- resample(cl_BMI_data$processed_emg[1,],500,3.333)
Biceps_EMG_rms_resampled <- Biceps_EMG_rms_resampled[EMG_data_interval[1]:EMG_data_interval[2]]
Triceps_EMG_rms_resampled <- resample(cl_BMI_data$processed_emg[2,],500,3.333)
Triceps_EMG_rms_resampled <- Triceps_EMG_rms_resampled[EMG_data_interval[1]:EMG_data_interval[2]]
mycolors <- c("green","magenta","blue","black","green","red","yellow","black","blue","red")
data_to_plot <- data.frame(filt_vel,cl_kinematics_data[,c("Target_shown","Target_reached","Move_onset","Timeout","Catch")],
Biceps_EMG_rms_resampled, Triceps_EMG_rms_resampled)
size(resample(Biceps_EMG_rms_resampled,1000,500))
Biceps_EMG_rms_resample1000 <- resample(Biceps_EMG_rms_resampled,1000,500)
Triceps_EMG_rms_resample1000 <- resample(Triceps_EMG_rms_resampled,1000,500)
length(filt_vel)
data_to_plot <- data.frame(filt_vel,cl_kinematics_data[,c("Target_shown","Target_reached","Move_onset","Timeout","Catch")],
Biceps_EMG_rms_resample1000[1:length(filt_vel)], Triceps_EMG_rms_resample1000[1:length(filt_vel)])
plot.ts(data_to_plot,plot.type = "single",col = mycolors, xy.labels = "",ylim = c(0,0.5))
plot.ts(data_to_plot,plot.type = "single",col = mycolors, xy.labels = "",ylim = c(0,100))
mycolors <- c("green","magenta","blue","black","green","red","blue","red")
data_to_plot <- data.frame(filt_vel,cl_kinematics_data[,c("Target_shown","Target_reached","Move_onset","Timeout","Catch")],
Biceps_EMG_rms_resample1000[1:length(filt_vel)]/100, Triceps_EMG_rms_resample1000[1:length(filt_vel)]/100)
mycolors <- c("green","magenta","blue","black","green","red","blue","red")
plot.ts(data_to_plot,plot.type = "single",col = mycolors, xy.labels = "",ylim = c(0,0.5))
all_stimulus_indices
m <- 1
all_response_indices
kinematic_data_trial_interval <- c(all_stimulus_indices[m],all_response_indices[m])
1 %in% cl_kinematics_data$Move_onset[kinematic_data_trial_interval[1]:kinematic_data_trial_interval[2]]
kinematic_data_trial_interval
1 %in% cl_kinematics_data$Move_onset[kinematic_data_trial_interval[1]:kinematic_data_trial_interval[2]]
all_target_hits
Start_of_trial
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
which(end_trial==1)
all_response_indices
size(which(cl_kinematics_data$Move_onset==1))
size(which(cl_kinematics_data$Timeout==1))
size(which(cl_kinematics_data$Target_reached==1))
Target_hit
target_shown_instants
target_reached_instances
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
val_instant
temp_intersect
which(cl_kinematics_data$Target_shown == 1)
which(cl_kinematics_data$Target_reached == 1)
intersect(which(cl_kinematics_data$Target_shown == 1), which(cl_kinematics_data$Target_reached == 1))
cl_kinematics_data$Target_shown <- ExtractUniqueTriggers(cl_kinematics_data$Target_shown)
cl_kinematics_data$Target_reached <- ExtractUniqueTriggers(cl_kinematics_data$Target_reached)
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
temp_intersect
which(cl_kinematics_data$Target_shown == 1)
which(cl_kinematics_data$Target_reached == 1)
which(cl_kinematics_data$Target_reached == 1)
which(cl_kinematics_data$Target_shown == 1)
6784-2725
Target_hit
which(Target_hit == 1)
which(cl_kinematics_data$Timeout == 1)
which(cl_kinematics_data$Move_onset == 1)
which(cl_kinematics_data$Catch == 1)
length(which(cl_kinematics_data$Catch == 1))
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
Target_hit
all_response_indices
all_target_hits
catch_indices
View(cl_trial_stats)
adj_start_of_trial
adj_end_of_trial
seq_along(adj_start_of_trial)
bmi_data_trial_interval
plot(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]])
hold on
plot(Triceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]])
plot(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]])
(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]] > 31)
which(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]] > 31)
length(which(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]] > 31))
length(which(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]] > 151))
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
plot(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]])
plot(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]])
plot(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]])
View(cl_trial_stats)
length(which(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]] > biceps_thr))
plot(Triceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]])
length(which(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]] > biceps_thr))
plot(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]])
View(cl_trial_stats)
View(cl_trial_stats)
plot(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]])
plot(Triceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]])
length(which(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]] > biceps_thr))
length(which(Triceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]] >triceps_thr))
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
View(cl_trial_stats)
save_filename
closedloop_Block_num
31*numeric(8)
numeric(8)
ones
ones(3)
31*rep(1,times = 7)
EMG_biceps_thr <- 25*rep(1,times = 7)
EMG_triceps_thr <- 25*rep(1,times = 7)
EMG_biceps_thr[bc]
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
plot(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]],type = "l",col = "red")
lines(Triceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]],col = "blue")
debugSource('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
length(which(Biceps_EMG_rms_resampled[adj_start_of_trial[k]:adj_end_of_trial[k]] > biceps_thr))
View(cl_trial_stats)
View(cl_trial_stats)
c(2:9)
length(closedloop_Block_num)
closedloop_Block_num <- c(2:9)      #3
times = length(closedloop_Block_num)
length(closedloop_Block_num)
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
c(1:5,7:9)
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
c(4:11)
c(9 10 10 7 6 6 6 6)
c(9,10,10,7,6,6,6,6)
c(5.5, 7.5, 7, 7, 6, 6, 6, 6)
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
analyze_closedloop_session_data(directory = "C:/NRI_BMI_Mahi_Project_files/All_Subjects/", Subject_name = "S9009", closeloop_Sess_num = 14, closedloop_Block_num = c(1:7))
library(signal)
library(R.matlab)
library(pracma)
library(abind)
analyze_closedloop_session_data(directory = "C:/NRI_BMI_Mahi_Project_files/All_Subjects/", Subject_name = "S9009", closeloop_Sess_num = 14, closedloop_Block_num = c(1:7))
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
library(signal)
library(R.matlab)
library(pracma)
library(abind)
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
library(signal)
library(R.matlab)
library(pracma)
library(abind)
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
analyze_closedloop_session_data(directory = "C:/NRI_BMI_Mahi_Project_files/All_Subjects/", Subject_name = "S9010", closeloop_Sess_num = 3, closedloop_Block_num = c(2:5,7:9))
bc
analyze_closedloop_session_data(directory = "C:/NRI_BMI_Mahi_Project_files/All_Subjects/", Subject_name = "S9010", closeloop_Sess_num = 3, closedloop_Block_num = c(2:5,7:9))
bc
analyze_closedloop_session_data(directory = "C:/NRI_BMI_Mahi_Project_files/All_Subjects/", Subject_name = "S9010", closeloop_Sess_num = 3, closedloop_Block_num = c(2:5))
bc
analyze_closedloop_session_data(directory = "C:/NRI_BMI_Mahi_Project_files/All_Subjects/", Subject_name = "S9010", closeloop_Sess_num = 3, closedloop_Block_num = c(2:5,7:9))
analyze_closedloop_session_data(directory = "C:/NRI_BMI_Mahi_Project_files/All_Subjects/", Subject_name = "S9010", closeloop_Sess_num = 3, closedloop_Block_num = c(2:5,7:9))
analyze_closedloop_session_data(directory = "C:/NRI_BMI_Mahi_Project_files/All_Subjects/", Subject_name = "S9010", closeloop_Sess_num = 3, closedloop_Block_num = c(2:5,7:9))
closeloop_Sess_num
length(all_stimulus_indices)
closedloop_Block_num[bc]
all_stimulus_indices
all_target_hits
all_response_indices
block_likert
library(signal)
library(R.matlab)
library(pracma)
library(abind)
source('C:/NRI_BMI_Mahi_Project_files/R_analysis/closedloopdata_analysis.R')
analyze_closedloop_session_data(directory = "C:/NRI_BMI_Mahi_Project_files/All_Subjects/", Subject_name = "S9010", closeloop_Sess_num = 3, closedloop_Block_num = c(2:5,7:9))
analyze_closedloop_session_data(directory = "C:/NRI_BMI_Mahi_Project_files/All_Subjects/", Subject_name = "S9010", closeloop_Sess_num = 4, closedloop_Block_num = c(1:8))
analyze_closedloop_session_data(directory = "C:/NRI_BMI_Mahi_Project_files/All_Subjects/", Subject_name = "S9010", closeloop_Sess_num = 5, closedloop_Block_num = c(1:8))
